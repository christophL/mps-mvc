package MVCLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b, conceptFqName)) {
      case 0:
        return new ConceptDescriptorBuilder("MVCLanguage.structure.Button").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "MVCLanguage.structure.Visible").properties("label").alias("button", "").create();
      case 1:
        return new ConceptDescriptorBuilder("MVCLanguage.structure.Label").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "MVCLanguage.structure.Visible").properties("labelName").create();
      case 2:
        return new ConceptDescriptorBuilder("MVCLanguage.structure.Text").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "MVCLanguage.structure.Visible").properties("initialText").alias("textField", "").create();
      case 3:
        return new ConceptDescriptorBuilder("MVCLanguage.structure.View").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"labels", "buttons", "textFields"}, new boolean[]{true, true, true}).alias("View", "").create();
      case 4:
        return new ConceptDescriptorBuilder("MVCLanguage.structure.Visible").interface_().properties("visible").create();
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }

  private static String[] stringSwitchCases_1htk8d_a0a0b = new String[]{"MVCLanguage.structure.Button", "MVCLanguage.structure.Label", "MVCLanguage.structure.Text", "MVCLanguage.structure.View", "MVCLanguage.structure.Visible"};
}
